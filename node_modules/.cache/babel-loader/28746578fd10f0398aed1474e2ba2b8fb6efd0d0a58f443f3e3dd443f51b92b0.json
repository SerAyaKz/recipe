{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ayanb\\\\Desktop\\\\cooking\\\\recipe\\\\src\\\\components\\\\Home\\\\AutoTags\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TagInputAutoSuggest = ({\n  suggestions,\n  selectedTags = [],\n  changeIngre\n}) => {\n  _s();\n  const [inputValue, setInputValue] = useState('');\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n  const handleSelectTag = selectedTag => {\n    setInputValue('');\n    changeIngre([...selectedTags, selectedTag]);\n    console.log(selectedTags);\n  };\n  const handleRemoveTag = tagToRemove => {\n    const updatedTags = selectedTags.filter(tag => tag !== tagToRemove);\n    changeIngre(updatedTags);\n    console.log(selectedTags);\n  };\n  const isTagSelected = tag => {\n    return selectedTags && selectedTags.some(selectedTag => selectedTag.id === tag.id);\n  };\n  const filteredSuggestions = suggestions.filter(suggestion => suggestion.name.toLowerCase().includes(inputValue.toLowerCase()) && !isTagSelected(suggestion));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"autotags\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"autotags\",\n      children: selectedTags.map(tag => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"selected-tag\",\n        children: [tag.name, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRemoveTag(tag),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this)]\n      }, tag.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputValue,\n      onChange: handleInputChange,\n      placeholder: \"Type to search tags\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"autotagsul\",\n      children: filteredSuggestions.map(suggestion => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"autotagsli\",\n        onClick: () => handleSelectTag(suggestion),\n        children: suggestion.name\n      }, suggestion.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }, this);\n};\n_s(TagInputAutoSuggest, \"SORcW8kVWUa8fZ+un8oXhp/OLnk=\");\n_c = TagInputAutoSuggest;\nexport default TagInputAutoSuggest;\nvar _c;\n$RefreshReg$(_c, \"TagInputAutoSuggest\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TagInputAutoSuggest","suggestions","selectedTags","changeIngre","_s","inputValue","setInputValue","handleInputChange","event","target","value","handleSelectTag","selectedTag","console","log","handleRemoveTag","tagToRemove","updatedTags","filter","tag","isTagSelected","some","id","filteredSuggestions","suggestion","name","toLowerCase","includes","className","children","map","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/ayanb/Desktop/cooking/recipe/src/components/Home/AutoTags/index.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './style.css';\r\n\r\nconst TagInputAutoSuggest = ({ suggestions, selectedTags = [], changeIngre }) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n  \r\n    const handleInputChange = (event) => {\r\n      setInputValue(event.target.value);\r\n    };\r\n  \r\n    const handleSelectTag = (selectedTag) => {\r\n      setInputValue('');\r\n      changeIngre([...selectedTags, selectedTag]);\r\n      console.log(selectedTags)\r\n    };\r\n  \r\n    const handleRemoveTag = (tagToRemove) => {\r\n      const updatedTags = selectedTags.filter((tag) => tag !== tagToRemove);\r\n      changeIngre(updatedTags);\r\n      console.log(selectedTags)\r\n\r\n    };\r\n  \r\n    const isTagSelected = (tag) => {\r\n      return selectedTags && selectedTags.some((selectedTag) => selectedTag.id === tag.id);\r\n    };\r\n  \r\n    const filteredSuggestions = suggestions.filter(\r\n      (suggestion) =>\r\n        suggestion.name.toLowerCase().includes(inputValue.toLowerCase()) &&\r\n        !isTagSelected(suggestion)\r\n    );\r\n  \r\n    return (\r\n      <div className='autotags'>\r\n        <div className='autotags'>\r\n          {selectedTags.map((tag) => (\r\n            <span key={tag.id} className=\"selected-tag\">\r\n              {tag.name}\r\n              <button onClick={() => handleRemoveTag(tag)}>&times;</button>\r\n            </span>\r\n          ))}\r\n        </div>\r\n        <input\r\n          type=\"text\"\r\n          value={inputValue}\r\n          onChange={handleInputChange}\r\n          placeholder=\"Type to search tags\"\r\n        />\r\n        <ul className='autotagsul'>\r\n          {filteredSuggestions.map((suggestion) => (\r\n            <li  className='autotagsli' key={suggestion.id} onClick={() => handleSelectTag(suggestion)}>\r\n              {suggestion.name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  };\r\nexport default TagInputAutoSuggest;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}