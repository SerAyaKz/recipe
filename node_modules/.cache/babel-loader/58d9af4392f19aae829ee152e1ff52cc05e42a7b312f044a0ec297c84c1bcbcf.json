{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ayanb\\\\Desktop\\\\cooking\\\\recipe\\\\src\\\\pages\\\\Recipe\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport \"./styles.css\";\nimport { Header, Footer, List, EmptyView } from \"../../components/common\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Recipe = () => {\n  _s();\n  let {\n    recipe_id\n  } = useParams();\n  const instance = {\n    baseURL: `https://unhatched-invoice.000webhostapp.com`\n  };\n  const requests = {\n    fetchTypes: `/type.txt`,\n    fetchNations: `/nation.txt`,\n    fetchReceipts: `/recipe.txt`,\n    fetchIngredient: `/ingredient.txt`\n  };\n  const [ingList, setIngList] = useState([]);\n  const [dataList, setDataList] = useState([]);\n  const [type_receipts, setTypeofDish] = useState([]);\n  const [nations, setNation] = useState([]);\n  const [selectedRecipe, setSelectedRecipe] = useState(null);\n  const getRecipeById = recipeId => {\n    // Use find method to find the recipe with the specified recipe_id\n    const foundRecipe = dataList.find(recipe => recipe.recipe_id === recipeId);\n    setSelectedRecipe(foundRecipe);\n  };\n  useEffect(() => {\n    async function fetchTypes() {\n      const data = await fetch(`${instance.baseURL}${requests.fetchTypes}`);\n      const res = await data.json();\n      setTypeofDish(res);\n    }\n    async function fetchNations() {\n      const data = await fetch(`${instance.baseURL}${requests.fetchNations}`);\n      const res = await data.json();\n      setNation(res);\n    }\n    async function fetchReceipt() {\n      const data = await fetch(`${instance.baseURL}${requests.fetchReceipts}`);\n      const res = await data.json();\n      setDataList(res);\n    }\n    async function fetchIngredient() {\n      const data = await fetch(`${instance.baseURL}${requests.fetchIngredient}`);\n      const res = await data.json();\n      setIngList(res);\n    }\n    fetchIngredient();\n    fetchReceipt();\n    fetchNations();\n    fetchTypes();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home_list-wrap\",\n      children: dataList ? /*#__PURE__*/_jsxDEV(List, {\n        list: dataList,\n        type_receipts: type_receipts,\n        nations: nations,\n        ingList: ingList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(EmptyView, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(Recipe, \"00VcqHmd/7UU/inMZ2ez0Byft0Q=\", false, function () {\n  return [useParams];\n});\n_c = Recipe;\nexport default Recipe;\nvar _c;\n$RefreshReg$(_c, \"Recipe\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Header","Footer","List","EmptyView","jsxDEV","_jsxDEV","Recipe","_s","recipe_id","instance","baseURL","requests","fetchTypes","fetchNations","fetchReceipts","fetchIngredient","ingList","setIngList","dataList","setDataList","type_receipts","setTypeofDish","nations","setNation","selectedRecipe","setSelectedRecipe","getRecipeById","recipeId","foundRecipe","find","recipe","data","fetch","res","json","fetchReceipt","children","fileName","_jsxFileName","lineNumber","columnNumber","className","list","_c","$RefreshReg$"],"sources":["C:/Users/ayanb/Desktop/cooking/recipe/src/pages/Recipe/index.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams} from \"react-router-dom\";\nimport \"./styles.css\";\nimport { Header, Footer, List,EmptyView } from \"../../components/common\";\n\nconst Recipe = () => {\n  let { recipe_id } = useParams();\n\n  const instance = {\n    baseURL: `https://unhatched-invoice.000webhostapp.com`,\n  };\n  const requests = {\n    fetchTypes: `/type.txt`,\n    fetchNations: `/nation.txt`,\n    fetchReceipts: `/recipe.txt`,\n    fetchIngredient: `/ingredient.txt`,\n  };\n  const [ingList, setIngList] = useState([]);\n  const [dataList, setDataList] = useState([]);\n\n  const [type_receipts, setTypeofDish] = useState([]);\n  const [nations, setNation] = useState([]);\n\n  const [selectedRecipe, setSelectedRecipe] = useState(null);\n  const getRecipeById = (recipeId) => {\n    // Use find method to find the recipe with the specified recipe_id\n    const foundRecipe = dataList.find(recipe => recipe.recipe_id === recipeId);\n    setSelectedRecipe(foundRecipe);\n  };\n\n  useEffect(() => {\n    async function fetchTypes() {\n      const data = await fetch(`${instance.baseURL}${requests.fetchTypes}`);\n      const res = await data.json();\n      setTypeofDish(res);\n    }\n    async function fetchNations() {\n      const data = await fetch(`${instance.baseURL}${requests.fetchNations}`);\n      const res = await data.json();\n      setNation(res);\n    }\n    async function fetchReceipt() {\n      const data = await fetch(`${instance.baseURL}${requests.fetchReceipts}`);\n      const res = await data.json();\n      setDataList(res);\n    }\n    async function fetchIngredient() {\n      const data = await fetch(\n        `${instance.baseURL}${requests.fetchIngredient}`\n      );\n      const res = await data.json();\n      setIngList(res);\n    }\n    fetchIngredient();\n    fetchReceipt();\n    fetchNations();\n    fetchTypes();\n  }, []);\n\n  return (\n    <div>\n      <Header />\n     \n      <div className=\"home_list-wrap\">\n        {dataList ? (\n          <List\n            list={dataList}\n            type_receipts={type_receipts}\n            nations={nations}\n            ingList={ingList}\n          />\n        ) : (\n          <EmptyView/>\n        )}\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default Recipe;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}