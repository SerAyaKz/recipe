{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ayanb\\\\Desktop\\\\cooking\\\\recipe\\\\src\\\\components\\\\Home\\\\FilterPanel\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { CheckboxProton, CheckboxProtonNation } from '../CheckboxProton';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FilterPanel = ({\n  selectedVegan,\n  selectVegan,\n  type_receipts,\n  changeCheckedType,\n  nations,\n  changeCheckedNation,\n  selectedDiff,\n  changeDiff,\n  selectedView,\n  changeView,\n  selectedRating,\n  changeRating,\n  nulifyVegan,\n  ingList,\n  changeIngre,\n  ing1List,\n  dataList // Assuming dataList is your list of recipes\n}) => {\n  _s();\n  const [typeDropdownOpen, setTypeDropdownOpen] = useState(false);\n  const [nationDropdownOpen, setNationDropdownOpen] = useState(false);\n  const [filterOption, setFilterOption] = useState(\"both\");\n  const toggleTypeDropdown = () => {\n    setTypeDropdownOpen(!typeDropdownOpen);\n  };\n  const toggleNationDropdown = () => {\n    setNationDropdownOpen(!nationDropdownOpen);\n  };\n  const handleFilterChange = () => {\n    setFilterOption(prevOption => {\n      switch (prevOption) {\n        case \"vegan\":\n          return \"vegetarian\";\n        case \"vegetarian\":\n          return \"both\";\n        case \"both\":\n          return \"none\";\n        default:\n          return \"vegan\";\n      }\n    });\n  };\n  const applyFilters = () => {\n    let updatedList = dataList;\n\n    // Vegan Filter\n    if (filterOption === \"vegan\") {\n      updatedList = updatedList.filter(item => item.isvegan);\n    }\n\n    // Vegetarian Filter\n    if (filterOption === \"vegetarian\") {\n      updatedList = updatedList.filter(item => item.isvegetarian);\n    }\n\n    // Both Filter (Vegan and Vegetarian)\n    if (filterOption === \"both\") {\n      updatedList = updatedList.filter(item => item.isvegan && item.isvegetarian);\n    }\n\n    // None Filter (No filtering)\n    // No need to apply additional filters for \"none\" option\n\n    // Apply other filters if needed (e.g., type, nation, etc.)\n\n    // Update the filtered list\n    // updateFilteredList(updatedList);\n  };\n\n  useEffect(() => {\n    applyFilters();\n  }, [\n  // Include dependencies for the useEffect hook\n  // (searchInput, type_receipts, nations, selectedDiff, selectedView, selectedRating, ingList)\n  searchInput, type_receipts, nations, selectedDiff, selectedView, selectedRating, ingList, filterOption // Include filterOption as a dependency\n  ]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"label\",\n        onClick: toggleTypeDropdown,\n        children: \"Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), typeDropdownOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkbox-container\",\n        children: type_receipts.map(typeofDish => /*#__PURE__*/_jsxDEV(CheckboxProton, {\n          id: typeofDish.type_id,\n          name: typeofDish.type_name,\n          checked: typeofDish.checked,\n          changeChecked: changeCheckedType\n        }, typeofDish.type_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"label\",\n        onClick: toggleNationDropdown,\n        children: \"Nation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), nationDropdownOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkbox-container\",\n        children: nations.map(nation => /*#__PURE__*/_jsxDEV(CheckboxProton, {\n          id: nation.nation_id,\n          name: nation.nation_name,\n          checked: nation.checked,\n          changeChecked: changeCheckedNation\n        }, nation.nation_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFilterChange,\n        children: \"Toggle Filter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(FilterPanel, \"+7ATs5o3u0WLuMN+JUlnDelRo60=\");\n_c = FilterPanel;\nexport default FilterPanel;\nvar _c;\n$RefreshReg$(_c, \"FilterPanel\");","map":{"version":3,"names":["React","useState","useEffect","CheckboxProton","CheckboxProtonNation","jsxDEV","_jsxDEV","FilterPanel","selectedVegan","selectVegan","type_receipts","changeCheckedType","nations","changeCheckedNation","selectedDiff","changeDiff","selectedView","changeView","selectedRating","changeRating","nulifyVegan","ingList","changeIngre","ing1List","dataList","_s","typeDropdownOpen","setTypeDropdownOpen","nationDropdownOpen","setNationDropdownOpen","filterOption","setFilterOption","toggleTypeDropdown","toggleNationDropdown","handleFilterChange","prevOption","applyFilters","updatedList","filter","item","isvegan","isvegetarian","searchInput","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","typeofDish","id","type_id","name","type_name","checked","changeChecked","nation","nation_id","nation_name","_c","$RefreshReg$"],"sources":["C:/Users/ayanb/Desktop/cooking/recipe/src/components/Home/FilterPanel/index.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { CheckboxProton, CheckboxProtonNation } from '../CheckboxProton';\nimport './styles.css';\n\nconst FilterPanel = ({\n  selectedVegan,\n  selectVegan,\n  type_receipts,\n  changeCheckedType,\n  nations,\n  changeCheckedNation,\n  selectedDiff,\n  changeDiff,\n  selectedView,\n  changeView,\n  selectedRating,\n  changeRating,\n  nulifyVegan,\n  ingList,\n  changeIngre,\n  ing1List,\n  dataList, // Assuming dataList is your list of recipes\n}) => {\n  const [typeDropdownOpen, setTypeDropdownOpen] = useState(false);\n  const [nationDropdownOpen, setNationDropdownOpen] = useState(false);\n  const [filterOption, setFilterOption] = useState(\"both\");\n\n  const toggleTypeDropdown = () => {\n    setTypeDropdownOpen(!typeDropdownOpen);\n  };\n\n  const toggleNationDropdown = () => {\n    setNationDropdownOpen(!nationDropdownOpen);\n  };\n\n  const handleFilterChange = () => {\n    setFilterOption((prevOption) => {\n      switch (prevOption) {\n        case \"vegan\":\n          return \"vegetarian\";\n        case \"vegetarian\":\n          return \"both\";\n        case \"both\":\n          return \"none\";\n        default:\n          return \"vegan\";\n      }\n    });\n  };\n\n  const applyFilters = () => {\n    let updatedList = dataList;\n\n    // Vegan Filter\n    if (filterOption === \"vegan\") {\n      updatedList = updatedList.filter((item) => item.isvegan);\n    }\n\n    // Vegetarian Filter\n    if (filterOption === \"vegetarian\") {\n      updatedList = updatedList.filter((item) => item.isvegetarian);\n    }\n\n    // Both Filter (Vegan and Vegetarian)\n    if (filterOption === \"both\") {\n      updatedList = updatedList.filter((item) => item.isvegan && item.isvegetarian);\n    }\n\n    // None Filter (No filtering)\n    // No need to apply additional filters for \"none\" option\n\n    // Apply other filters if needed (e.g., type, nation, etc.)\n\n    // Update the filtered list\n    // updateFilteredList(updatedList);\n  };\n\n  useEffect(() => {\n    applyFilters();\n  }, [\n    // Include dependencies for the useEffect hook\n    // (searchInput, type_receipts, nations, selectedDiff, selectedView, selectedRating, ingList)\n    searchInput,\n    type_receipts,\n    nations,\n    selectedDiff,\n    selectedView,\n    selectedRating,\n    ingList,\n    filterOption, // Include filterOption as a dependency\n  ]);\n\n  return (\n    <div>\n      {/* Type */}\n      <div className='input-group'>\n        <div className='label' onClick={toggleTypeDropdown}>Type</div>\n        {typeDropdownOpen && (\n          <div className=\"checkbox-container\">\n            {type_receipts.map((typeofDish) => (\n              <CheckboxProton\n                key={typeofDish.type_id}\n                id={typeofDish.type_id}\n                name={typeofDish.type_name}\n                checked={typeofDish.checked}\n                changeChecked={changeCheckedType}\n              />\n            ))}\n          </div>\n        )}\n      </div>\n\n      {/* Nation */}\n      <div className='input-group'>\n        <div className='label' onClick={toggleNationDropdown}>Nation</div>\n        {nationDropdownOpen && (\n          <div className=\"checkbox-container\">\n            {nations.map((nation) => (\n              <CheckboxProton\n                key={nation.nation_id}\n                id={nation.nation_id}\n                name={nation.nation_name}\n                checked={nation.checked}\n                changeChecked={changeCheckedNation}\n              />\n            ))}\n          </div>\n        )}\n      </div>\n\n      {/* Filter Button */}\n      <div className='input-group'>\n        <button onClick={handleFilterChange}>Toggle Filter</button>\n      </div>\n    </div>\n  );\n};\n\nexport default FilterPanel;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}