{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ayanb\\\\Desktop\\\\cooking\\\\recipe\\\\src\\\\components\\\\common\\\\TagInputAutoSuggest\\\\index.jsx\";\nimport React from 'react';\nimport Checkbox from '@mui/material/Checkbox';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst icon = /*#__PURE__*/_jsxDEV(CheckBoxOutlineBlankIcon, {\n  fontSize: \"small\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 14\n}, this);\nconst checkedIcon = /*#__PURE__*/_jsxDEV(CheckBoxIcon, {\n  fontSize: \"small\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 21\n}, this);\n//{ changeCheckedType, typeofDish }\nexport default function CheckboxesTags({\n  ing1,\n  changeIngre,\n  ingredient\n}) {\n  return /*#__PURE__*/_jsxDEV(Autocomplete, {\n    multiple: true,\n    id: \"checkboxes-tags-demo\",\n    options: ingredient,\n    disableCloseOnSelect: true,\n    getOptionLabel: option => option.name,\n    ing1: ing1,\n    renderOption: (props, option, {\n      selected\n    }) => /*#__PURE__*/_jsxDEV(\"li\", {\n      ...props,\n      children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n        icon: icon,\n        checkedIcon: checkedIcon,\n        style: {\n          marginRight: 8\n        },\n        checked: selected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), option.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 15\n    }, this),\n    style: {\n      width: '100%'\n    },\n    onChange: changeIngre,\n    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n      ...params,\n      label: \"Filter with ingredients?\",\n      placeholder: \"Ex: Potato\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 7\n  }, this);\n}\n_c = CheckboxesTags;\nvar _c;\n$RefreshReg$(_c, \"CheckboxesTags\");","map":{"version":3,"names":["React","Checkbox","TextField","Autocomplete","CheckBoxOutlineBlankIcon","CheckBoxIcon","jsxDEV","_jsxDEV","icon","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","checkedIcon","CheckboxesTags","ing1","changeIngre","ingredient","multiple","id","options","disableCloseOnSelect","getOptionLabel","option","name","renderOption","props","selected","children","style","marginRight","checked","width","onChange","renderInput","params","label","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/ayanb/Desktop/cooking/recipe/src/components/common/TagInputAutoSuggest/index.jsx"],"sourcesContent":["import React from 'react';\nimport Checkbox from '@mui/material/Checkbox';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\n\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\n//{ changeCheckedType, typeofDish }\nexport default function CheckboxesTags({ ing1, changeIngre, ingredient }) {\n  return (\n      <Autocomplete\n          multiple\n          id=\"checkboxes-tags-demo\"\n          options={ingredient}\n          disableCloseOnSelect\n          getOptionLabel={(option) => option.name}\n          ing1={ing1}\n\n          renderOption={(props, option, { selected }) => (\n              <li {...props}>\n                <Checkbox\n                    icon={icon}\n                    checkedIcon={checkedIcon}\n                    style={{ marginRight: 8 }}\n                    checked={selected}\n                />\n                {option.name}\n              </li>\n          )}\n          style={{ width: '100%' }}\n          onChange={changeIngre}\n          renderInput={(params) => (\n              <TextField {...params} label=\"Filter with ingredients?\" placeholder=\"Ex: Potato\" />\n          )}\n\n      />\n  );\n}\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,wBAAwB,MAAM,0CAA0C;AAC/E,OAAOC,YAAY,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,IAAI,gBAAGD,OAAA,CAACH,wBAAwB;EAACK,QAAQ,EAAC;AAAO;EAAAC,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CAAC;AAC1D,MAAMC,WAAW,gBAAGP,OAAA,CAACF,YAAY;EAACI,QAAQ,EAAC;AAAO;EAAAC,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CAAC;AACrD;AACA,eAAe,SAASE,cAAcA,CAAC;EAAEC,IAAI;EAAEC,WAAW;EAAEC;AAAW,CAAC,EAAE;EACxE,oBACIX,OAAA,CAACJ,YAAY;IACTgB,QAAQ;IACRC,EAAE,EAAC,sBAAsB;IACzBC,OAAO,EAAEH,UAAW;IACpBI,oBAAoB;IACpBC,cAAc,EAAGC,MAAM,IAAKA,MAAM,CAACC,IAAK;IACxCT,IAAI,EAAEA,IAAK;IAEXU,YAAY,EAAEA,CAACC,KAAK,EAAEH,MAAM,EAAE;MAAEI;IAAS,CAAC,kBACtCrB,OAAA;MAAA,GAAQoB,KAAK;MAAAE,QAAA,gBACXtB,OAAA,CAACN,QAAQ;QACLO,IAAI,EAAEA,IAAK;QACXM,WAAW,EAAEA,WAAY;QACzBgB,KAAK,EAAE;UAAEC,WAAW,EAAE;QAAE,CAAE;QAC1BC,OAAO,EAAEJ;MAAS;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC,EACDW,MAAM,CAACC,IAAI;IAAA;MAAAf,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CACN;IACFiB,KAAK,EAAE;MAAEG,KAAK,EAAE;IAAO,CAAE;IACzBC,QAAQ,EAAEjB,WAAY;IACtBkB,WAAW,EAAGC,MAAM,iBAChB7B,OAAA,CAACL,SAAS;MAAA,GAAKkC,MAAM;MAAEC,KAAK,EAAC,0BAA0B;MAACC,WAAW,EAAC;IAAY;MAAA5B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EACpF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAER;AAAC0B,EAAA,GA7BuBxB,cAAc;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}